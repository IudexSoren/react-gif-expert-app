{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catLst","type","placeholder","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","query","encodeURI","fetch","resp","json","data","gifUrls","map","gif","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","gifs","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAgBzC,OACE,uBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAM,OAAKP,GAAL,mBAAoBO,OACxCN,EAAc,MAKhB,UACE,wDACA,uBACEO,KAAK,OACLC,YAAY,SACZC,MAAQV,EACRW,SAnBoB,SAACR,GACzBF,EAAcE,EAAES,OAAOF,c,QCKZG,EAXK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAG5B,OACE,sBAAKC,UAAU,2CAAf,UACE,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCREK,EAAO,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,4DACN,mCACTC,EAAQC,UAAUH,GACV,GACRL,EAJe,iDAIkCO,EAJlC,kBAGP,GAHO,oBACN,oCADM,SAKFE,MAAMT,GALJ,cAKfU,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KACFC,EAAUD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC9B,MAAO,CACLC,GAAID,EAAIC,GACRjB,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIE,cAAN,aAAE,EAAYC,iBAAiBlB,QAXjB,kBAeda,GAfc,4CAAH,sDCyBLM,EAtBC,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAAe,ECAN,SAAEA,GAAe,IAAD,EAChBrB,mBAAS,CACjC4B,KAAM,GACNQ,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAgB1C,OAVAC,qBAAU,WACRnB,EAAQC,GACPmB,MAAK,SAAAC,GACJH,EAAS,CACPV,KAAMa,EACNL,SAAS,MAEV,CAACf,OAGCgB,EDd2BK,CAAarB,GAAjCY,EAFkB,EAExBL,KAAcQ,EAFU,EAEVA,QAEtB,OACE,sBAAKnB,UAAU,YAAf,UACE,6BAAMI,IACJe,GAAW,mBAAGnB,UAAU,qDAAb,yBAEXgB,EAAOH,KAAI,SAACa,GACV,OACE,cAAC,EAAD,eAEOA,GADCA,EAAIX,WEgBTY,EA1BM,WAAO,IAAD,EAEW5C,mBAAS,CAAC,cAFrB,mBAElB6C,EAFkB,KAEN9C,EAFM,KAIzB,OACE,qCACE,8CACA,cAAC,EAAD,CACEA,cAAgBA,IAElB,uBACA,6BAEI8C,EAAWf,KAAI,SAACT,GACd,OAAQ,cAAC,EAAD,CAEEA,SAAWA,GADLA,YCd5ByB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.85d26097.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 0) {\r\n      setCategories(catLst => [inputValue, ...catLst]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <label>Buscar categor√≠a</label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Buscar\"\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n\r\n\r\n  return (\r\n    <div className='card animate__animated animate__fadeInUp'>\r\n      <img src={ url } alt={ title }/>\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem;","export const getGifs = async (category) => {\r\n  const apiKey = '7iu6Hk85j531kl3MO5GxvBQISrIILTqA',\r\n        query = encodeURI(category),\r\n        limit = 10;\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ query }&limit=${ limit }&api_key=${ apiKey }`,\r\n        resp = await fetch(url),\r\n        { data } = await resp.json();\r\n  const gifUrls = data.map(gif => {\r\n    return {\r\n      id: gif.id,\r\n      title: gif.title,\r\n      url: gif.images?.downsized_medium.url\r\n    }\r\n  });\r\n\r\n  return gifUrls;\r\n}","import GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <div className='card-grid'>\r\n      <h3>{ category }</h3>\r\n      { loading && <p className='animate__animated animate__flash animate__infinite'>Cargando...</p> }\r\n      {\r\n        images.map((img) => {\r\n          return (\r\n            <GifGridItem\r\n              key={ img.id }\r\n              { ...img }\r\n            />\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGrid;","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n    .then(gifs => {\r\n      setState({\r\n        data: gifs,\r\n        loading: false\r\n      });\r\n    }, [category])\r\n  });\r\n\r\n  return state;\r\n}","import { useState } from \"react\";\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory\r\n        setCategories={ setCategories }\r\n      />\r\n      <hr/>\r\n      <ol>\r\n        {\r\n          categories.map((category) => {\r\n            return (<GifGrid\r\n                      key={ category }\r\n                      category={ category }\r\n                    />);\r\n          })\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}